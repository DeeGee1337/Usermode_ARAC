#pragma once
        
Highprio:
List the modules and threads associated with this process in Snapshotfunc

Midprio:

Lowprio:

Ablage:
Get-ChildItem -Filter *.hpp -Recurse | Get-Content | Measure-Object -Word -Line -Character

Thread structure:

#include <iostream>
#include <thread>

void Loop() {
    while(true) {
        //(do something)
    }
}

void SecondLoop() {
    while(true) {
        //(do something)
    }
}

int main() {
    thread t1(Loop);
    thread t2(SecondLoop);
    // Your 2 threads will run now in paralel
    // ... <- So some other things with your application
    // Now you want to close the app, perhaps all work is done or the user asked it to quit
    // Notify threads to stop
    t1running = false;
    t2running = false;
    // Wait for all threads to stop
    t1.join();
    t2.join(); 
    // Exit program
    return false;

    Main() in states (Statemachine)